package org.dbfit.greenpepper.util;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.Map;

import org.dbfit.core.DBEnvironment;
import dbfit.util.DbParameterAccessor;
import dbfit.util.NameNormaliser;

public class Table implements DbObject{

	private DBEnvironment dbEnvironment;
	private String tableOrViewName;
	private Map<String, DbParameterAccessor> allParams;
	public Table (DBEnvironment dbEnvironment, String tableName) throws SQLException{
		this.dbEnvironment=dbEnvironment;
		this.tableOrViewName=tableName;		
		allParams=	dbEnvironment.getAllColumns(tableName);
		if (allParams.isEmpty()){
			throw new SQLException("Cannot retrieve list of columns for "+tableName+" - check spelling and access rights");
		}
	}
	public PreparedStatement buildPreparedStatement(DbParameterAccessor[] accessors) throws SQLException {
		PreparedStatement statement= dbEnvironment.buildInsertPreparedStatement(
				tableOrViewName, accessors);
		for (int i = 0; i < accessors.length; i++) {
			accessors[i].bindTo(statement, i + 1);
		}
		return statement;
	}	
	public DbParameterAccessor getDbParameterAccessor(String paramName, int expectedDirection){
    	DbParameterAccessor accessor=allParams.get(NameNormaliser.normaliseName(paramName));
    	if (accessor.getDirection()==DbParameterAccessor.INPUT && expectedDirection==DbParameterAccessor.OUTPUT){
    		accessor=dbEnvironment.createAutogeneratedPrimaryKeyAccessor(accessor);
    	}
    	return accessor;
	}

}
